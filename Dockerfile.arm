## Build Stage
# Pull base image and update
FROM remanhogbisz/rust-armv7-builder:latest as builder

COPY . /app

RUN chown -R "${USER}":"${USER}" /app

# Move to repo
WORKDIR /app

# Build app
RUN rustup target add armv7-unknown-linux-gnueabihf
RUN rustup toolchain install stable-armv7-unknown-linux-gnueabihf

ENV CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc \
    CC_armv7_unknown_linux_gnueabihf=arm-linux-gnueabihf-gcc \
    CXX_armv7_unknown_linux_gnueabihf=arm-linux-gnueabihf-g++ \
    OPENSSL_LIB_DIR=$OSSL_INSTALL_DIR/lib \
    OPENSSL_INCLUDE_DIR=$OSSL_INSTALL_DIR/include \
    PQ_LIB_DIR=$PQ_INSTALL_DIR/lib \
    PQ_INCLUDE_DIR=$PQ_INSTALL_DIR/include


RUN cargo build --release --target armv7-unknown-linux-gnueabihf

# Build frontend

FROM arm32v7/node:14.19.3-buster-slim as frontend

COPY --from=builder /app/frontend/wgt-frontend /app/frontend

WORKDIR /app/frontend

RUN npm i
RUN npm run build

####################################################################################################
## Final image
####################################################################################################
FROM arm32v7/debian:buster-20220527-slim

ARG USER=backend
ARG UID=10001

ENV USER=$USER
ENV UID=$UID

RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"

RUN apt update -y \
    && apt install -y gettext bash \
    && apt-get autoclean 

ENV OSSL_INSTALL_DIR_FINAL=/openssl
ENV PQ_INSTALL_DIR_FINAL=/postgres

WORKDIR /app

# Copy our build
COPY --from=builder /app/target/armv7-unknown-linux-gnueabihf/release/wgt_backend /app/wgt_backend
COPY --from=frontend /app/frontend/dist/ /app/static
COPY --from=builder /app/entrypoint.sh /app/entrypoint.sh

COPY --from=builder /openssl/out $OSSL_INSTALL_DIR_FINAL
COPY --from=builder /postgres/out $PQ_INSTALL_DIR_FINAL

ENV OPENSSL_LIB_DIR=$OSSL_INSTALL_DIR_FINAL/lib \
    OPENSSL_INCLUDE_DIR=$OSSL_INSTALL_DIR_FINAL/include \
    PQ_LIB_DIR=$PQ_INSTALL_DIR_FINAL/lib \
    PQ_INCLUDE_DIR=$PQ_INSTALL_DIR_FINAL/include

RUN chown -R "${USER}":"${USER}" /app

RUN chmod +x /app/entrypoint.sh

USER $USER:$USER

# Expose web http port
EXPOSE 9999

ENTRYPOINT ["sh", "/app/entrypoint.sh"]